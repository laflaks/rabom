# - *- coding: utf- 8 - *-
#–Ø–∑—ã–∫ —Ä–∞–∑–º–µ—Ç–∫–∏ html
import telebot, random, config, wikipedia, pyshorteners, google_trans_new, time, rabom_keyboard, uuid, logging, os
from pyowm import OWM
from telebot import types
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton
from googletrans import Translator
from functools import wraps
s = pyshorteners.Shortener()
wikipedia.set_lang('ru')
translator = Translator()
owm = OWM(config.API_KEY)
owm.config['language'] = 'ru' 
mgr = owm.weather_manager()


os.system('clear')
os.system('CLS')

#–í—ã–±–æ—Ä —Ç–æ–∫–µ–Ω–∞
version = int(input('–í–≤–µ–¥–∏—Ç–µ –≤–µ—Ä—Å–∏—é –±–æ—Ç–∞ 1 –∏–ª–∏ 2: '))
if version == 1:
	bot = telebot.TeleBot(config.API)
elif version == 2:
	bot = telebot.TeleBot(config.API1)

#–õ–æ–≥–≥–∏
f = open('rabom.txt', 'w')
f.close()
logging.basicConfig(filename='rabom.txt',level=logging.INFO, format = '%(asctime)s - %(message)s')
logging.info('Rabom started...')

#–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
admin_id = 1299393358 
moderator_id = -1001150368805
testers_id = [847595841, 1299393358, 827868931, 912994315]
users_id = [827868931, 731320294, 411222522, 967800364, 912994315, 84759584, 660463075, 967800364, 1433106866, 1340176765, 1786996290, 738452716, 865008475, 818152404]

filter_inf = ['‚àö','œÄ','‚àÜ']
filter_group = ['/chat_id', '/log_mode', '/chat_id@sjsjsjslfjaa_bot', '/logg_info']
global user_id;
global name;
global username;
global message_to_admin;
global rule;
global balance;
global token;
global anekdot;
global town;
global result_rus;
global url;
global inf;
logging.info( u'All variables are created' )

#–ß—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫
banned_users = []
def is_not_banned(func):
    @wraps(func)
    def decorator(message):
        if message.from_user.id not in banned_users and message.chat.id > 0 or message.text in filter_group:
        	return func(message)
    return decorator
@bot.message_handler(commands=['ban'])
def ban_user(message):
    message_args = message.text.split()
    if len(message_args) == 3 and message.chat.id == admin_id:
        prichin = message_args[2]
        banned_users.append(int(message_args[1]))
        bot.reply_to(message, text='OK')
        bot.send_message(message_args[1],f'–í–∞–º –≤—ã–¥–∞–Ω –±–∞–Ωüö´\nüò¨–ü—Ä–∏—á–∏–Ω–∞: {prichin}')
    else:
        bot.reply_to(message, text='–¢—ã –Ω–µ –¥–æ—Å—Ç–æ–∏–Ω')
       
@bot.message_handler(commands=['unban'])
def unban_user(message):
    message_args = message.text.split()
    if len(message_args) == 2 and message.chat.id == admin_id:
        banned_users.pop()
        bot.reply_to(message, text='OK')
        bot.send_message(message_args[1],'–í–∞–º –≤—ã–¥–∞–Ω —Ä–∞–∑–±–∞–Ω‚úÖ')
    else:
        bot.reply_to(message, text='–¢—ã –Ω–µ –¥–æ—Å—Ç–æ–∏–Ω')

#–í—ã–¥–∞—á–∞ —Ä–æ–ª–∏ —Ç–µ—Å—Ç–µ—Ä–∞
@bot.message_handler(commands=['tester'])
def tester_user(message):
    message_args = message.text.split()
    if len(message_args) == 2 and message.chat.id == admin_id:
        testers_id.append(int(message_args[1]))
        bot.reply_to(message, text='OK')
        bot.send_message(message_args[1],'–í–∞–º –≤—ã–¥–∞–Ω–∞ —Ä–æ–ª—å testerüîß\n–ß–∞—Ç —Ç–µ—Å—Ç–µ—Ä–æ–≤üëáüèª\nhttps://t.me/joinchat/iSM0tf8rU2EwNjZi')
    else:
        bot.reply_to(message, text='–¢—ã –Ω–µ –¥–æ—Å—Ç–æ–∏–Ω')

#–ö–æ–º–∞–Ω–¥—ã
@bot.message_handler(commands = ['start','help', 'menu', 'id', 'set', 'token', 'log_mode', 'chat_id', 'dior', 'leon', 'akeno', 'chel', 'jenenka', 'logg_info'])
@is_not_banned
def command_message(message):
	anekdot = random.randint(1,2)
	if message.text == "/start" and message.chat.id not in users_id:
		bot.send_message(message.chat.id,'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n–ù–∞–ø–∏—à–∏ /help —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –æ –º–æ–∏—Ö —Ñ—É–Ω–∫—Ü–∏—è—Ö',reply_markup = rabom_keyboard.menu_keyboard())
		user_id = str(message.chat.id)
		username = str(message.from_user.username)
		bot.send_message(moderator_id,f'–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å!\nüí≥id: {user_id}\nüöπusername: @{username}')
		users_id.append(message.chat.id)
		bot.send_message(message.chat.id,'–¢–µ–ø–µ—Ä—å —Ç—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!')
	elif message.text == "/start" and message.chat.id in users_id:
		bot.send_message(message.chat.id,'–¢—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!')
	elif message.text == "/help":
		bot.send_message(message.chat.id,'–ü—Ä–∏–≤–µ—Ç, –≤–æ—Ç —á—Ç–æ —è –º–æ–≥—É:\n/help - <b>–ø–æ–º–æ—â—å, –≤—ã–¥–∞—ë—Ç —Å–ø–∏—Å–æ–∫ —Ç–æ —á–µ–≥–æ —è –º–æ–≥—É.</b>\n/set - <b>–≤–≤–æ–¥ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —Ä–∞–Ω–¥–æ–º–Ω–æ–≥–æ —á–∏—Å–ª–∞</b>\n/token - <b>–≤–∞—à —É–Ω–∏–∫–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω</b>\nüé≤random number - <b>–≤—ã–¥–∞—ë—Ç —Ä–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ –≤–∞—à–µ–≥–æ –ª–∏–º–∏—Ç–∞.</b>\nüë§–ü—Ä–æ—Ñ–∏–ª—å - <b> –≤—ã–¥–∞—ë—Ç —Ç–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å</b>\nüîé–ù–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é  - <b>–∏—â–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º –∏–∑ wiki</b>\nüîó–°–æ–∫—Ä–∞—Ç–∏—Ç—å —Å—Å—ã–ª–∫—É - <b>—Å–æ–∫—Ä–∞—â–∞–µ—Ç –≤–≤–µ–¥—ë–Ω—É—é —Å—Å—ã–ª–∫—É</b>\nüìú–ü–µ—Ä–µ–≤–æ–¥ - <b>–ø–µ—Ä–µ–≤–æ–¥–∏—Ç –≤–∞—à —Ç–µ–∫—Å—Ç</b>'.format(message.from_user, bot.get_me()),
		parse_mode = 'html')
	elif message.text == '/menu':
		bot.send_message(message.chat.id,'–ö–Ω–æ–ø–∫–∏ –≤—ã–¥–∞–Ω—ã!', reply_markup = rabom_keyboard.menu_keyboard())
	elif message.text == '/id':
		bot.send_message(message.chat.id,str(message.chat.id))
	elif message.text == '/set':
		bot.send_message(message.chat.id,'–í–≤–µ–¥–∏—Ç–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –∫–æ—Ç–æ—Ä–æ–µ –º–æ–∂–µ—Ç –≤—ã–ø–∞—Å—Ç—å: ')
		bot.register_next_step_handler(message, get_max_random);
	elif message.text == '/token':
		token = uuid.uuid4()
		bot.send_message(message.chat.id,str(token))
	elif message.text == '/log_mode' and message.chat.id < 0:
		bot.send_message(moderator_id,'loggs notification ON!', reply_markup = rabom_keyboard.log_keyboard())
	elif message.text == '/chat_id' and message.chat.id < 0 or message.text == '/chat_id@sjsjsjslfjaa_bot' and message.chat.id < 0:
		bot.send_message(message.chat.id,str(message.chat.id))
	elif message.text == '/dior':
		audio = open(r'Dior.mp3', 'rb')
		time.sleep(0.05)
		bot.send_audio(message.chat.id, audio)
		audio.close()
	elif message.text == '/leon':
		bot.send_sticker(message.chat.id,'CAACAgIAAxkBAAECMu5gfFYa8h6XKaazzv6REimWtItprgAClQwAAi5S6EshuUSRit3omx8E')
		time.sleep(1)
		bot.send_sticker(message.chat.id,'CAACAgIAAxkBAAECMu9gfFYbTQHGcrhVv_eew2cNKyTAAgAC1Q8AApr66EszPtrYyTmWER8E')
	elif message.text == '/akeno':
		bot.send_sticker(message.chat.id,'CAACAgIAAxkBAAECMwRgfF1N69dWT4v5rrKglOSvb5RPTQAClAwAAk_e4Utdfn-I0qDfcx8E')
		time.sleep(1)
		bot.send_sticker(message.chat.id,'CAACAgIAAxkBAAECMwJgfF1LHDjlguDUU2Lm6PX-NMgJeQACHg4AAt0L6EvZUWw6gK5a9R8E')
		time.sleep(1)
		bot.send_sticker(message.chat.id,'CAACAgIAAxkBAAECMwFgfF1K37p0uOIo-AR71L0eqsPHPgACeAwAAkYL4EvBjYm7c0Cfrh8E')
	elif message.text == '/chel':
		bot.send_sticker(message.chat.id,'CAACAgIAAxkBAAECMwVgfF1NBoIpLZXrfEM5Pvf8p-1NSAAC8Q0AAvB96Es7496FzVRTDR8E')
	elif message.text == '/logg_info' and message.chat.id < 0:
		f = open('rabom.txt', 'r')
		bot.send_message(moderator_id, f.read(3500))
		f.close()
	
#–ö–æ–º–∞–Ω–¥—ã –Ω–∞ –∫–Ω–æ–ø–∫–∏
@bot.message_handler(content_types = ['text'])
@is_not_banned
def text_button_message(message):
	rule = 'user';
	balance = 0
	if message.text == 'üé≤Random number':
		try:
			bot.send_message(message.chat.id,str(random.randint(0,mr)))
		except:
			bot.send_message(message.chat.id,'–¢—ã –Ω–µ –≤–≤—ë–ª –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –∫–æ—Ç–æ—Ä–æ–µ —Ç–µ–±–µ –º–æ–∂–µ—Ç –≤—ã–ø–∞—Å—Ç—å „ÉΩ(ÔΩ°‚óïo‚óïÔΩ°)Ôæâ')
			bot.send_message(message.chat.id,'–ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É /set')
	elif message.text == 'üë§–ü—Ä–æ—Ñ–∏–ª—å' and message.chat.id in testers_id:
		username = str(message.from_user.username)
		user_id = str(message.chat.id)
		bot.send_message(message.chat.id,f'üë§–ò–º—è: @{username}\nüìÇ–ü—Ä–∞–≤–∞: testerüîß\nüí≥id: {user_id}\nüí∞–ë–∞–ª–∞–Ω—Å: {balance} \n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–æ—Ç–µ: '+str(len(users_id)))
	elif message.text == 'üë§–ü—Ä–æ—Ñ–∏–ª—å' and message.chat.id not in testers_id:
		username = str(message.from_user.username)
		user_id = str(message.chat.id)
		bot.send_message(message.chat.id,f'üë§–ò–º—è: @{username}\nüìÇ–ü—Ä–∞–≤–∞: {rule}\nüí≥id: {user_id}\nüí∞–ë–∞–ª–∞–Ω—Å: {balance} \n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–æ—Ç–µ: '+str(len(users_id)))
	elif message.text == 'üîé–ù–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é':
		if message.text not in filter_inf:
			bot.send_message(message.chat.id,'–í–≤–µ–¥–∏—Ç–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞', reply_markup = rabom_keyboard.demenu_v2_keyboard())
			bot.register_next_step_handler(message, get_inf);
	elif message.text == 'üè†–ú–µ–Ω—é':
		bot.send_message(message.chat.id,'–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –º–µ–Ω—é.', reply_markup = rabom_keyboard.menu_keyboard())
	elif message.text == 'üîó–°–æ–∫—Ä–∞—Ç–∏—Ç—å —Å—Å—ã–ª–∫—É':
		bot.send_message(message.chat.id,'–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É:')
		bot.register_next_step_handler(message, get_url);
	elif message.text == 'üìú–ü–µ—Ä–µ–≤–æ–¥':
		bot.send_message(message.chat.id,'–í—ã –ø–µ—Ä–µ—à–ª–∏ –≤ –º–µ–Ω—é –ø–µ—Ä–µ–≤–æ–¥–∞', reply_markup = rabom_keyboard.translate_keyboard())
	elif message.text == '‚óÄÔ∏è–ù–∞–∑–∞–¥':
		bot.send_message(message.chat.id,'–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞–∑–∞–¥.', reply_markup = rabom_keyboard.translate_keyboard())
	elif message.text == 'üî§–Ø–∑—ã–∫–∏ –ø–µ—Ä–µ–≤–æ–¥–∞':
		bot.send_message(message.chat.id,'–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫–∏!\n<b>–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º —è–∑—ã–∫–∞, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ —Å–º–µ–Ω–∏—Ç—å.</b>\n\n<b>–°–ª–µ–≤–∞</b> - —è–∑—ã–∫ —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä–æ–µ –í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏.\n\n<b>–°–ø—Ä–∞–≤–∞</b> - —è–∑—ã–∫, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏.'.format(message.from_user, bot.get_me()),
		parse_mode = 'html', reply_markup = rabom_keyboard.my_lang_keyboard())
	elif message.text == '‚û°Ô∏è–ü–µ—Ä–µ–≤–µ—Å—Ç–∏':
		try:
			bot.send_message(message.chat.id,f'{talang} ‚û°Ô∏è {talangq}\n\n–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç: ', reply_markup = rabom_keyboard.demenu_keyboard())
			bot.register_next_step_handler(message, get_text);
		except:
			bot.send_message(message.chat.id, '–í—ã –Ω–µ –≤—ã–±—Ä–∞–ª–∏ —è–∑—ã–∫üëÖ')
	elif message.text == '‚öô–ù–∞—Å—Ç—Ä–æ–π–∫–∏':
		bot.send_message(message.chat.id,'–í—ã –ø–µ—Ä–µ—à–ª–∏ –≤ ‚öô–ù–∞—Å—Ç—Ä–æ–π–∫–∏', reply_markup = rabom_keyboard.settings_keyboard())
	elif message.text == '‚õÖ–ü–æ–≥–æ–¥–∞':
		bot.send_message(message.chat.id,'–í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥ ( ÔΩ•œâÔΩ•)‚òû\n(–ø–æ–≥–æ–¥—É –≤ –∫–æ—Ç–æ—Ä–æ–º —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å)')
		bot.register_next_step_handler(message, get_town);
	elif message.text == 'üîî–°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏':
		bot.send_message(message.chat.id,'‚úèÔ∏è–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:')
		bot.register_next_step_handler(message, get_send);
	elif message.text == 'üìü–ü–µ—Ä–µ–≤–æ–¥ –¥–≤–æ–∏—á–Ω–æ–≥–æ –∫–æ–¥–∞':
		bot.send_message(message.chat.id,'‚ùì–í—ã–±–µ—Ä–∏—Ç–µ –ø—É—Ç—å', reply_markup = rabom_keyboard.code_keyboard())
	elif message.text == '–¢–µ–∫—Å—Ç –≤ –∫–æ–¥':
		bot.send_message(message.chat.id,'‚úèÔ∏è–í–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ç–µ–∫—Å—Ç:')
		bot.register_next_step_handler(message, get_code_text);
	elif message.text == '–ö–æ–¥ –≤ —Ç–µ–∫—Å—Ç':
		bot.send_message(message.chat.id,'‚úèÔ∏è–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∫–æ–¥:')
		bot.register_next_step_handler(message, get_code);
	elif message.text.lower() == '–∑–Ω–∞–º–µ–Ω—Å–∫':
		bot.send_sticker(message.chat.id,'CAACAgIAAxkBAAECKzhgdFcIvMtk8nBuzmw62EPkMdcDfgAC3AoAAv-ooEtnzxrHLeH5MB4E')
		#bot.send_photo(message.chat.id, open('znamensk.jpg', 'rb'))

#–§—É–Ω–∫—Ü–∏–∏
@bot.callback_query_handler(func=lambda call: True)
def callback_query(call):
    global tolang;
    global talangq;
    global mylang;
    global talang;
    if call.data == 'ru':
        mylang = 'ru'
        talang = '–†—É—Å—Å–∫–∏–πüá∑üá∫'
        bot.answer_callback_query(call.id,f'–Ø–∑—ã–∫ –≤–≤–æ–¥–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {talang}')
    elif call.data == 'ru1':
        tolang = 'ru'
        talangq = '–†—É—Å—Å–∫–∏–πüá∑üá∫'
        bot.answer_callback_query(call.id,f'–Ø–∑—ã–∫ –≤—ã–≤–æ–¥–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {talangq}')
    elif call.data == 'en':
        mylang = 'en'
        talang = '–ê–Ω–≥–ª–∏–π—Å–∫–∏–πüá¨üáß'  
        bot.answer_callback_query(call.id,f'–Ø–∑—ã–∫ –≤–≤–æ–¥–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {talang}')
    elif call.data == 'en1':
        tolang = 'en'
        talangq = '–ê–Ω–≥–ª–∏–π—Å–∫–∏–πüá¨üáß'
        bot.answer_callback_query(call.id,f'–Ø–∑—ã–∫ –≤—ã–≤–æ–¥–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {talangq}')
    elif call.data == 'kk':
        mylang = 'kk'
        talang = '–ö–∞–∑–∞—Ö—Å–∫–∏–πüá∞üáø'
        bot.answer_callback_query(call.id,f'–Ø–∑—ã–∫ –≤–≤–æ–¥–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {talang}')
    elif call.data == 'kk1':
        tolang = 'kk'
        talangq = '–ö–∞–∑–∞—Ö—Å–∫–∏–πüá∞üáø'
        bot.answer_callback_query(call.id,f'–Ø–∑—ã–∫ –≤—ã–≤–æ–¥–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {talangq}')
    elif call.data == 'ar':
        mylang = 'ar'
        talang = '–ê—Ä–∞–±—Å–∫–∏–πüá¶üá™'
        bot.answer_callback_query(call.id,f'–Ø–∑—ã–∫ –≤–≤–æ–¥–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {talang}')
    elif call.data == 'ar1':
        tolang = 'ar'
        talangq = '–ê—Ä–∞–±—Å–∫–∏–πüá¶üá™'
        bot.answer_callback_query(call.id,f'–Ø–∑—ã–∫ –≤—ã–≤–æ–¥–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {talangq}')
    elif call.data == 'ja':
        mylang = 'ja'
        talang = '–Ø–ø–æ–Ω—Å–∫–∏–πüáØüáµ'
        bot.answer_callback_query(call.id,f'–Ø–∑—ã–∫ –≤–≤–æ–¥–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {talang}')
    elif call.data == 'ja1':
        tolang = 'ja'
        talangq = '–Ø–ø–æ–Ω—Å–∫–∏–πüáØüáµ'
        bot.answer_callback_query(call.id,f'–Ø–∑—ã–∫ –≤—ã–≤–æ–¥–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {talangq}')
    elif call.data == 'zh_cn':
        mylang = 'zh_cn'
        talang = '–ö–∏—Ç–∞–π—Å–∫–∏–πüá®üá≥(—É–ø—Ä–æ—â—ë–Ω–Ω—ã–π)'
        bot.answer_callback_query(call.id,f'–Ø–∑—ã–∫ –≤–≤–æ–¥–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {talang}')
    elif call.data == 'zh_cn1':
        tolang = 'zh_cn'
        talangq = '–ö–∏—Ç–∞–π—Å–∫–∏–πüá®üá≥(—É–ø—Ä–æ—â—ë–Ω–Ω—ã–π)'
        bot.answer_callback_query(call.id,f'–Ø–∑—ã–∫ –≤—ã–≤–æ–¥–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {talangq}')
    elif call.data == 'de':
        mylang = 'de'
        talang = '–ì–µ—Ä–º–∞–Ω—Å–∫–∏–πüá©üá™'
        bot.answer_callback_query(call.id,f'–Ø–∑—ã–∫ –≤–≤–æ–¥–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {talang}')
    elif call.data == 'de1':
        tolang = 'de'
        talangq = '–ì–µ—Ä–º–∞–Ω—Å–∫–∏–πüá©üá™'
        bot.answer_callback_query(call.id,f'–Ø–∑—ã–∫ –≤—ã–≤–æ–¥–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {talangq}')
    elif call.data == 'pl':
        mylang = 'pl'
        talang = ' –ü–æ–ª—å—Å–∫–∏–πüáµüá±'
        bot.answer_callback_query(call.id,f'–Ø–∑—ã–∫ –≤–≤–æ–¥–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {talang}')
    elif call.data == 'pl1':
        tolang = 'pl'
        talangq = '–ü–æ–ª—å—Å–∫–∏–πüáµüá±'
        bot.answer_callback_query(call.id,f'–Ø–∑—ã–∫ –≤—ã–≤–æ–¥–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {talangq}')
    elif call.data == 'uk':
        mylang = 'uk'
        talang = '–£–∫—Ä–∞–∏–Ω—Å–∫–∏–πüá∫üá¶'
        bot.answer_callback_query(call.id,f'–Ø–∑—ã–∫ –≤–≤–æ–¥–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {talang}')
    elif call.data == 'uk1':
        tolang = 'uk'
        talangq = '–£–∫—Ä–∞–∏–Ω—Å–∫–∏–πüá∫üá¶'
        bot.answer_callback_query(call.id,f'–Ø–∑—ã–∫ –≤—ã–≤–æ–¥–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {talangq}')
    elif call.data == 'fa':
        mylang = 'fa'
        talang = '–ü–µ—Ä—Å–∏–¥—Å–∫–∏–πüáÆüá∑'
        bot.answer_callback_query(call.id,f'–Ø–∑—ã–∫ –≤–≤–æ–¥–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {talang}')
    elif call.data == 'fa1':
        tolang = 'fa'
        talangq = '–ü–µ—Ä—Å–∏–¥—Å–∫–∏–πüáÆüá∑'
        bot.answer_callback_query(call.id,f'–Ø–∑—ã–∫ –≤—ã–≤–æ–¥–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {talangq}')
    elif call.data == 'ky':
        mylang = 'ky'
        talang = '–ö—ã—Ä–≥—ã–∑—Å–∫–∏–πüá∞üá¨'
        bot.answer_callback_query(call.id,f'–Ø–∑—ã–∫ –≤–≤–æ–¥–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {talang}')
    elif call.data == 'ky1':
        tolang = 'ky'
        talangq = '–ö—ã—Ä–≥—ã–∑—Å–∫–∏–πüá∞üá¨'
        bot.answer_callback_query(call.id,f'–Ø–∑—ã–∫ –≤—ã–≤–æ–¥–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {talangq}')
    return mylang
    return tolang
    return talang
    return talangq
     
def get_inf(message):
		try:
			if message.text == 'üè†–ú–µ–Ω—é':
				bot.send_message(message.chat.id,'–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –º–µ–Ω—é.', reply_markup = rabom_keyboard.menu_keyboard())
			elif message.text not in filter_inf and message.text != 'üè†–ú–µ–Ω—é':
				inf = message.text;
				bot.send_message(message.chat.id,'–ò—â—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—éüîÉ')
				bot.send_message(message.chat.id,wikipedia.summary(inf))
				bot.register_next_step_handler(message, get_inf);
			elif message.text in filter_inf:
				bot.send_message(message.chat.id,'–Ø —Å–∏–º–≤–æ–ª—ã –Ω–µ –ø—Ä–∏–Ω–∏–º–∞—é ‡≤†_‡≤†')
				bot.register_next_step_handler(message, get_inf)
		except:
			bot.send_message(message.chat.id,'–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ ‡≤†_‡≤†')
			bot.register_next_step_handler(message, get_inf)

def get_url(message):
		try:
			url = message.text;
			bot.send_message(message.chat.id,'–°–æ–∫—Ä–∞—â–∞—é —Å—Å—ã–ª–∫—ÉüîÉ')
			bot.send_message(message.chat.id,s.tinyurl.short(url))
		except:
			bot.send_message(message.chat.id,'–Ø –Ω–µ –º–æ–≥—É —Å–æ–∫—Ä–∞—Ç–∏—Ç—å –¥–∞–Ω–Ω—É—é —Å—Å—ã–ª–∫—É ‡≤†_‡≤†')

def get_text(message):
	try:
		if message.text == 'üè†–ú–µ–Ω—é':
			bot.send_message(message.chat.id,'–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –º–µ–Ω—é.', reply_markup = rabom_keyboard.menu_keyboard())
		elif message.text == '‚óÄÔ∏è–ù–∞–∑–∞–¥':
			bot.send_message(message.chat.id,'–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –º–µ–Ω—é.', reply_markup = rabom_keyboard.translate_keyboard())
		elif message.text != 'üè†–ú–µ–Ω—é':
			result_rus = translator.translate(message.text, src=str(mylang), dest=str(tolang))
			bot.send_message(message.chat.id,result_rus.text)
			bot.register_next_step_handler(message, get_text);
	except:
		bot.send_message(message.chat.id,'–Ø –Ω–µ –º–æ–≥—É –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ —ç—Ç–æ—Ç —Ç–µ–∫—Å—Ç!\n–õ–∏–±–æ –≤—ã –Ω–µ –≤—ã–±—Ä–∞–ª–∏ —è–∑—ã–∫ ‡≤†_‡≤†!')
	
def get_town(message):
	try:
		town = message.text
		observation = mgr.weather_at_place(town)
		w = observation.weather
		weather = w.detailed_status
		temp = w.temperature('celsius').get('temp')
		wind_speed = w.wind().get('speed')
		bot.send_message(message.chat.id,f'üèô–ì–æ—Ä–æ–¥: {town}\nüå¶–ü–æ–≥–æ–¥–∞: {weather}\nüå°–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp}¬∞C\nüí®–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {wind_speed} –º/—Å')
	except:
		bot.send_message(message.chat.id,'–Ø –Ω–µ –º–æ–≥—É –Ω–∞–π—Ç–∏ —ç—Ç–æ—Ç –≥–æ—Ä–æ–¥ –Ω–∞ –∫–∞—Ä—Ç–µ ._.')

def get_max_random(message):
	global mr;
	try:
		if int(message.text) < 100000:
			mr = int(message.text)
			bot.send_message(message.chat.id,'–ü—Ä–∏–Ω—è–ª!')
			return mr
		else:
			bot.send_message(message.chat.id,'–Ø –¥–æ —Å—Ç–æ–ª—å–∫–∏ —Å—á–∏—Ç–∞—Ç—å –Ω–µ —É–º–µ—é! ‡≤†_‡≤†')
	except:
		bot.send_message(message.chat.id,'–Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–π —Ü–∏—Ñ—Ä—ã ‡≤†_‡≤†')
		
def get_code(message):
	try:
		code =''.join([chr(int(s, 2)) for s in message.text.split()])
		bot.send_message(message.chat.id, code)
	except:
		bot.send_message(message.chat.id,'–ß—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫')

def get_code_text(message):
	try:
		code_text = ' '.join(format(ord(x), 'b') for x in message.text)
		bot.send_message(message.chat.id, code_text)
	except:
		bot.send_message(message.chat.id,'–ß—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫')

def get_send(message):
	try:
		message_to_admin = str(message.text)
		user_id = str(message.chat.id)
		name = str(message.from_user.first_name)
		username = str(message.from_user.username)
		bot.send_message(message.chat.id,'üì®–û—Ç–ø—Ä–∞–≤–∏–ª')
		bot.send_message(admin_id,f'üí¨–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç:\nüí≥id: {user_id}\nüöπusername: @{username}\n–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è: {message_to_admin}')
		bot.send_message(moderator_id,f'üí¨–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç:\nüí≥id: {user_id}\nüöπusername: @{username}\n–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è: {message_to_admin}')
	except:
		bot.send_message(message.chat.id,'–Ø –Ω–µ –º–æ–≥—É —Ç–∞–∫–æ–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å ‡≤†_‡≤†')



bot.polling(none_stop = True)